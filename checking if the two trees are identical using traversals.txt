import java.util.*;
import java.lang.*;
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        ArrayList<Integer> ar1=new ArrayList<>();
        ArrayList<Integer> ar2=new ArrayList<>();
        preorderP(p,ar1);
        preorderP(q,ar2);
        if(ar1.size()!=ar2.size()){
            return false;
        }
        // System.out.println(ar1.size());
        // System.out.println(ar2.size());

        for(int i=0;i<ar1.size();i++){
            if(!ar1.get(i).equals(ar2.get(i))){
                return false;
            }
        }
        return true;

    }

    public void preorderP(TreeNode p,ArrayList<Integer> ar1){
        if(p==null){
            ar1.add(Integer.MIN_VALUE);
            return;
        }
        ar1.add(p.val);
        preorderP(p.left,ar1);
        preorderP(p.right,ar1);
    }
    
    
}