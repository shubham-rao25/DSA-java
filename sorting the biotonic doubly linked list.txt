
import java.util.*;
import java.lang.*;

class Node{
    public int value;
    public Node next;
    public Node prev;
}


class LinkedList{
    public Node head;
    public Node tail;
    public int size;
    
    void creation(int nodeValue){
        Node node=new Node();
        node.value=nodeValue;
        node.next=null;
        node.prev=null;
        head=node;
        tail=node;
        size=1;
    }
    
    void insertion(int nodeValue){
        Node newNode=new Node();
        newNode.value=nodeValue;
        newNode.next=null;
        newNode.prev=tail;
        tail.next=newNode;
        tail=newNode;
        size++;
    }
    
    void traversalforward(){
        Node temp=head;
        for(int i=0;i<size;i++){
            System.out.print(temp.value);
            if(i!=size-1){
                System.out.print("-->");
            }
            temp=temp.next;
        }
    }
    void traversalBackward(){
        Node temp=tail;
        for(int i=0;i<size;i++){
            System.out.print(temp.value);
            if(i !=size-1){
                System.out.print("-->");
            }
            temp=temp.prev;
        }
    }
}
public class Main
{
    public static LinkedList BiotonicDll(LinkedList ll){
        int len=ll.size;
        LinkedList sorted=new LinkedList();
        int[] linked=new int[len];
        Node temp=ll.head;
        for(int i=0;i<len;i++){
            linked[i]=temp.value;
            temp=temp.next;
        }
        Arrays.sort(linked);
        
        for(int i=0;i<len;i++){
            if(sorted.head==null){
                sorted.creation(linked[i]);
            }else{
                sorted.insertion(linked[i]);
            }
        }
        return sorted;
    }
	public static void main(String[] args) {
        LinkedList ll=new LinkedList();
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        for(int i=0;i<n;i++){
            int val=sc.nextInt();
            if(ll.head==null){
                
                ll.creation(val);
            }else{
                ll.insertion(val);
            }
        }
        
        ll.traversalforward();
        System.out.println();
        
        LinkedList sorted=BiotonicDll(ll);
        sorted.traversalforward();
	}
}
