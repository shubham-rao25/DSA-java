/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head==null){
            return head;
        }

        
        ListNode dummyHead=new ListNode(0);
        ListNode hea=dummyHead;
        
        ArrayList<Integer> arr=new ArrayList<>();
        ListNode temp=head;
        while(temp!=null){
            arr.add(temp.val);
            temp=temp.next;
        }
        if(arr.size()==1){
            return head;
        }
        int i=0;
        int j=1;

        while(i<arr.size() && j<arr.size()){
            int a=arr.get(i);
            arr.set(i,arr.get(j));
            arr.set(j,a);
            i+=2;
            j+=2;
        }
        for(int k=0;k<arr.size();k++){
            hea.next=new ListNode(arr.get(k));
            hea=hea.next;
        }
        
        return dummyHead.next;
    }
}