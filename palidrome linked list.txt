/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
 import java.util.*;
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode temp=head;

        ArrayList<Integer> a=new ArrayList<>();

        while(temp!=null){
            a.add(temp.val);
            temp=temp.next;
        }   
        System.out.println(a);
        ArrayList<Integer> arr=new ArrayList<>();
        for(int i=a.size()-1;i>=0;i--){
            arr.add(a.get(i));
        }

        for(int i=0;i<a.size();i++){
            if(a.get(i)!=arr.get(i)){
                return false;
            }
        }
        return true;
    }
}

//leetcode problem 234