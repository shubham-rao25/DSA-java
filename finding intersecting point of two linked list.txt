import java.lang.*;
import java.util.*;


class Node{
    public int value;
    public Node prev;
    public Node next;
}

class LinkedList{
    public int size;
    public Node head;
    public Node tail;
    
    public void creation(int nodeValue){
        Node node=new Node();
        node.value=nodeValue;
        node.next=null;
        head=node;
        tail=node;
        size=1;
    }
    
    public void insertion(int nodeValue){
        Node newNode=new Node();
        newNode.value=nodeValue;
        newNode.next=null;
        tail.next=newNode;
        tail=newNode;
        size++;
    }
    
    public void transversal(){
        Node temp=head;
        for(int i=0;i<size;i++){
            System.out.print(temp.value);
            if(i!=size-1){
                System.out.print("-->");
            }
            temp=temp.next;
        }
    }
}

class Solution{
   
    
    public void intersectionPoint(LinkedList lla,LinkedList llb){
        HashSet<Integer> hs=new HashSet<>();
        Node temp1=lla.head;
        while(temp1!=null){
            hs.add(temp1.value);
            temp1=temp1.next;
        }
        Node temp2=llb.head;
        
        while(temp2!=null){
            if(hs.contains(temp2.value)){
                System.out.println(temp2.value);
                return;
            }
            temp2=temp2.next;
        }
        
    }
}
public class Main{
    public static void main(String[] args){
        LinkedList lla=new LinkedList();
        LinkedList llb=new LinkedList();
        Solution sol=new Solution();
        Scanner sc=new Scanner(System.in);
        lla.creation(3);
        lla.insertion(6);
        lla.insertion(9);
        lla.insertion(15);
        lla.insertion(30);
        
        llb.creation(10);
        llb.insertion(15);
        llb.insertion(30);
        
        
        
        sol.intersectionPoint(lla,llb);
    }
}