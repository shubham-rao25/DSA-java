class Solution {
    public void nextPermutation(int[] nums) {
        int len=nums.length;
        int ind1=-1;
        int ind2=-1;
        for(int i=nums.length-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                ind1=i;
                break;
            }
        }
        if(ind1!=-1){
            for(int i=nums.length-1;i>=0;i--){
                if(nums[i]>nums[ind1]){
                    ind2=i;
                    break;
                }
            }

            int temp=nums[ind1];
            nums[ind1]=nums[ind2];
            nums[ind2]=temp;
            ind1++;
            int a=ind1;
            int end=nums.length-1;
            while(a<end){
                int tem=nums[a];
                nums[a]=nums[end];
                nums[end]=tem;
                a++;
                end--;
            }
        }
        else if(ind1==-1){
            int i=0;
            int j=nums.length-1;
            while(i<j){
                int temp=nums[i];
                nums[i]=nums[j];
                nums[j]=temp;
                i++;
                j--;
            }
        }
        // return nums;
    }
}
leetcode problem 31