import java.util.*;
public class Main{
    public static int maxArea(int[] hist,int n){
       Stack<Integer> s=new Stack<>();
        int max_area=0;
        int tp;
        int area_with_top;
        
        int i=0;
        while(i<n){
            if(s.isEmpty() || hist[i]>= hist[s.peek()]){
                s.push(i++);
            }
            
            else{
                tp=s.peek();
                s.pop();
                area_with_top=hist[tp]*(s.isEmpty()?i:i-s.peek()-1);
                if(max_area<area_with_top){
                    max_area=area_with_top;
                }
                
            }
        }
        
        while(s.isEmpty()==false){
            tp=s.peek();
            s.pop();
            area_with_top=hist[tp]*(s.isEmpty()?i:i-s.peek()-1);
            if(max_area<area_with_top){
                max_area=area_with_top;
            }
        }
        return max_area;
    }
    public static void main(String[] args){
        int [] arr={ 6, 2, 5, 4, 5, 1, 6 };
        
        // int right=0;
        System.out.println(maxArea(arr,arr.length));
        
    }
}