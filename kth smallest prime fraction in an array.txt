import java.util.*;

class Solution {
    public int[] kthSmallestPrimeFraction(int[] arr, int k) {
        int[] ans = new int[2];
        List<List<Integer>> list = new ArrayList<>();
        List<Float> ar = new ArrayList<>();
        
        // Generate all possible pairs and their corresponding fractions
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                List<Integer> li = Arrays.asList(arr[i], arr[j]);
                list.add(li);
                ar.add((float) arr[i] / arr[j]);
            }
        }
        List<Float> ar1 = new ArrayList<>();
        for(int i=0;i<ar.size();i++){
            ar1.add(ar.get(i));
        }
        Collections.sort(ar);
        List<Float> ar2 = new ArrayList<>();
        for(int i=0;i<ar.size();i++){
            ar2.add(ar.get(i));
        }
        // Sort the fractions
        
        
        
        float val = ar2.get(k - 1); 
        int index = ar1.indexOf(val); 
        
        // Populate ans with the corresponding pair
        ans[0] = list.get(index).get(0);
        ans[1] = list.get(index).get(1);

        return ans;
    }
}
